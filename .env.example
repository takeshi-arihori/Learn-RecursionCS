# RecursionCurriculum 環境変数設定ファイル
# このファイルを .env にコピーして設定をカスタマイズしてください

# ========================================
# Docker設定
# ========================================

# プロジェクト名（コンテナ名に使用）
COMPOSE_PROJECT_NAME=recursioncurriculum

# ========================================
# MySQL設定
# ========================================

# データベース接続情報
MYSQL_ROOT_PASSWORD=root_password
MYSQL_DATABASE=recursion_db
MYSQL_USER=recursion_user
MYSQL_PASSWORD=recursion_pass

# テスト用データベース
MYSQL_TEST_DATABASE=recursion_db_test

# MySQLポート（ホスト側）
MYSQL_PORT=3306

# ========================================
# Nginx設定
# ========================================

# Webサーバーポート
HTTP_PORT=8080
HTTPS_PORT=8443

# ========================================
# phpMyAdmin設定
# ========================================

# phpMyAdminポート
PHPMYADMIN_PORT=8090

# phpMyAdmin設定
PMA_HOST=mysql
PMA_USER=recursion_user
PMA_PASSWORD=recursion_pass

# ========================================
# PHP設定
# ========================================

# PHP設定
PHP_MEMORY_LIMIT=512M
PHP_MAX_EXECUTION_TIME=300
PHP_UPLOAD_MAX_FILESIZE=100M
PHP_POST_MAX_SIZE=100M

# Xdebug設定
XDEBUG_MODE=debug,develop,coverage
XDEBUG_CLIENT_HOST=host.docker.internal
XDEBUG_CLIENT_PORT=9003

# ========================================
# 開発環境設定
# ========================================

# 環境（development/production/testing）
APP_ENV=development

# デバッグモード
DEBUG=true

# タイムゾーン
TIMEZONE=Asia/Tokyo

# ログレベル（debug/info/warning/error/critical）
LOG_LEVEL=debug

# ========================================
# Git設定（オプション）
# ========================================

# Git設定（コミット時に使用）
GIT_USER_NAME="Your Name"
GIT_USER_EMAIL="your.email@example.com"

# ========================================
# テスト設定
# ========================================

# テストカバレッジ最小閾値
COVERAGE_THRESHOLD=80

# PHPStan解析レベル
PHPSTAN_LEVEL=9

# ========================================
# バックアップ設定
# ========================================

# バックアップ保存先
BACKUP_DIR=./backups

# バックアップファイル保持日数
BACKUP_RETENTION_DAYS=30

# ========================================
# 通知設定（開発支援）
# ========================================

# Slack通知（オプション）
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/...
# SLACK_CHANNEL=#development

# ========================================
# パフォーマンス設定
# ========================================

# Composer並列実行数
COMPOSER_PROCESS_TIMEOUT=300

# Docker buildkit有効化
DOCKER_BUILDKIT=1
COMPOSE_DOCKER_CLI_BUILD=1

# ========================================
# セキュリティ設定
# ========================================

# アプリケーションキー（ランダム文字列）
APP_KEY=base64:your-random-32-character-string-here

# JWT秘密鍵（必要な場合）
# JWT_SECRET=your-jwt-secret-key

# CORS設定
CORS_ALLOWED_ORIGINS=http://localhost:8080,http://localhost:3000

# ========================================
# 外部サービス設定（学習用）
# ========================================

# Redis（必要な場合）
# REDIS_HOST=redis
# REDIS_PORT=6379
# REDIS_PASSWORD=

# Elasticsearch（必要な場合）
# ELASTICSEARCH_HOST=elasticsearch
# ELASTICSEARCH_PORT=9200

# ========================================
# 開発ツール設定
# ========================================

# MailHog（メールテスト用）
# MAILHOG_HOST=mailhog
# MAILHOG_PORT=1025
# MAILHOG_WEB_PORT=8025

# ========================================
# プロジェクト固有設定
# ========================================

# 学習進捗トラッキング
TRACK_PROGRESS=true

# テスト自動実行
AUTO_RUN_TESTS=false

# フォーマット自動適用
AUTO_FORMAT_CODE=true

# ========================================
# 使用例
# ========================================
#
# 1. このファイルを .env にコピー:
#    cp .env.example .env
#
# 2. 必要な値を編集:
#    vi .env
#
# 3. 環境変数を読み込んで起動:
#    make up
#
# 注意: .env ファイルは git にコミットしないでください